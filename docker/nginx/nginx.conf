server_names_hash_bucket_size 64;
upstream local_api {
    server app:8080;
    keepalive 8;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
}

# server {
#     server_name ${API_DOMAIN};
#
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     include /etc/nginx/my-ssl.conf;
#     ssl_certificate ${SSL_CERT_FILE};
#     ssl_certificate_key ${SSL_KEY_FILE};
#
#
#     proxy_buffer_size 128k;
#     proxy_buffers 4 256k;
#     proxy_busy_buffers_size 256k;
#
#     location / {
#         include /etc/nginx/my-proxy.conf;
#         proxy_pass http://local_api/;
#     }
# }
server {
    server_name ${API_DOMAIN};
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    include /etc/nginx/my-ssl.conf;
    ssl_certificate ${SSL_CERT_FILE};
    ssl_certificate_key ${SSL_KEY_FILE};

    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    expires -1;
    add_header Pragma "no-cache";
    add_header Cache-Control "no-store, must-revalidate";

    location / {
        include /etc/nginx/my-proxy.conf;
        include /etc/nginx/my-gzip.conf;
        proxy_pass http://local_api;
        expires 1y;
        add_header Cache-Control "public";
    }
}
